import { useState } from 'react';
import { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';
import { Badge } from '@/components/ui/badge';
import { Button } from '@/components/ui/button';
import { Tabs, TabsContent, TabsList, TabsTrigger } from '@/components/ui/tabs';
import Icon from '@/components/ui/icon';

interface ShopItem {
  id: number;
  name: string;
  price: number;
  category: string;
  description?: string;
  image?: string;
  growthStage?: string;
}

interface ShopPageProps {
  shopItems: ShopItem[];
  getRarityColor: (rarity: string) => string;
}

export default function ShopPage({ shopItems, getRarityColor }: ShopPageProps) {
  const [activeCategory, setActiveCategory] = useState('dinosaurs');

  const dinosaurs = [
    { id: 1, name: '–¢–∏—Ä–∞–Ω–Ω–æ–∑–∞–≤—Ä', price: 15000, growthStage: '–í–∑—Ä–æ—Å–ª—ã–π', description: '–ö–æ—Ä–æ–ª—å —Ö–∏—â–Ω–∏–∫–æ–≤' },
    { id: 2, name: '–í–µ–ª–æ—Ü–∏—Ä–∞–ø—Ç–æ—Ä', price: 8000, growthStage: '–í–∑—Ä–æ—Å–ª—ã–π', description: '–ë—ã—Å—Ç—Ä—ã–π –∏ —Å–º–µ—Ä—Ç–æ–Ω–æ—Å–Ω—ã–π' },
    { id: 3, name: '–¢—Ä–∏—Ü–µ—Ä–∞—Ç–æ–ø—Å', price: 12000, growthStage: '–í–∑—Ä–æ—Å–ª—ã–π', description: '–ú–æ—â–Ω—ã–π —Ç—Ä–∞–≤–æ—è–¥–Ω—ã–π' },
    { id: 4, name: '–ö–∞—Ä–Ω–æ—Ç–∞–≤—Ä', price: 10000, growthStage: '–í–∑—Ä–æ—Å–ª—ã–π', description: '–ê–≥—Ä–µ—Å—Å–∏–≤–Ω—ã–π —Ö–∏—â–Ω–∏–∫' },
    { id: 5, name: '–°–ø–∏–Ω–æ–∑–∞–≤—Ä', price: 16000, growthStage: '–í–∑—Ä–æ—Å–ª—ã–π', description: '–†–µ—á–Ω–æ–π –æ—Ö–æ—Ç–Ω–∏–∫' },
    { id: 6, name: '–ü—Ç–µ—Ä–∞–Ω–æ–¥–æ–Ω', price: 7000, growthStage: '–í–∑—Ä–æ—Å–ª—ã–π', description: '–õ–µ—Ç–∞—é—â–∏–π —è—â–µ—Ä' },
    { id: 7, name: '–ê–ª–ª–æ–∑–∞–≤—Ä', price: 11000, growthStage: '–°—É–±-–≤–∑—Ä–æ—Å–ª—ã–π', description: '–°—Ç–∞–π–Ω—ã–π —Ö–∏—â–Ω–∏–∫' },
    { id: 8, name: '–ê–Ω–∫–∏–ª–æ–∑–∞–≤—Ä', price: 9000, growthStage: '–í–∑—Ä–æ—Å–ª—ã–π', description: '–ñ–∏–≤–∞—è –∫—Ä–µ–ø–æ—Å—Ç—å' },
  ];

  const boosts = [
    { id: 11, name: '–£—Å–∫–æ—Ä–µ–Ω–∏–µ —Ä–æ—Å—Ç–∞ x2', price: 500, description: '–£–¥–≤–∞–∏–≤–∞–µ—Ç —Å–∫–æ—Ä–æ—Å—Ç—å —Ä–æ—Å—Ç–∞ –Ω–∞ 24 —á–∞—Å–∞', icon: 'Zap' },
    { id: 12, name: '–£—Å–∫–æ—Ä–µ–Ω–∏–µ —Ä–æ—Å—Ç–∞ x3', price: 1000, description: '–£—Ç—Ä–∞–∏–≤–∞–µ—Ç —Å–∫–æ—Ä–æ—Å—Ç—å —Ä–æ—Å—Ç–∞ –Ω–∞ 24 —á–∞—Å–∞', icon: 'Zap' },
    { id: 13, name: '–£—Å–∫–æ—Ä–µ–Ω–∏–µ —Ä–æ—Å—Ç–∞ x5', price: 2000, description: '–£—Å–∫–æ—Ä—è–µ—Ç —Ä–æ—Å—Ç –≤ 5 —Ä–∞–∑ –Ω–∞ 24 —á–∞—Å–∞', icon: 'Zap' },
    { id: 14, name: '–ë—É—Å—Ç –æ–ø—ã—Ç–∞ +50%', price: 400, description: '–î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–π –æ–ø—ã—Ç –Ω–∞ 12 —á–∞—Å–æ–≤', icon: 'TrendingUp' },
    { id: 15, name: '–ë—É—Å—Ç –æ–ø—ã—Ç–∞ +100%', price: 750, description: '–î–≤–æ–π–Ω–æ–π –æ–ø—ã—Ç –Ω–∞ 12 —á–∞—Å–æ–≤', icon: 'TrendingUp' },
    { id: 16, name: '–ü—Ä–µ–º–∏—É–º —Å—Ç–∞—Ç—É—Å 7 –¥–Ω–µ–π', price: 1500, description: '–í—Å–µ –±—É—Å—Ç—ã –∞–∫—Ç–∏–≤–Ω—ã', icon: 'Star' },
    { id: 17, name: '–ü—Ä–µ–º–∏—É–º —Å—Ç–∞—Ç—É—Å 30 –¥–Ω–µ–π', price: 5000, description: '–í—Å–µ –±—É—Å—Ç—ã –∞–∫—Ç–∏–≤–Ω—ã –º–µ—Å—è—Ü', icon: 'Star' },
  ];

  const food = [
    { id: 21, name: '–ú—è—Å–æ —Ö–∏—â–Ω–∏–∫–∞', price: 150, description: '–í–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç 30% –≥–æ–ª–æ–¥–∞', icon: 'Beef' },
    { id: 22, name: '–†—ã–±–∞', price: 100, description: '–í–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç 20% –≥–æ–ª–æ–¥–∞', icon: 'Fish' },
    { id: 23, name: '–Ø–≥–æ–¥—ã', price: 80, description: '–í–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç 15% –≥–æ–ª–æ–¥–∞ —Ç—Ä–∞–≤–æ—è–¥–Ω—ã–º', icon: 'Apple' },
    { id: 24, name: '–¢—Ä–∞–≤—ã', price: 60, description: '–í–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç 10% –≥–æ–ª–æ–¥–∞ —Ç—Ä–∞–≤–æ—è–¥–Ω—ã–º', icon: 'Leaf' },
    { id: 25, name: '–Ø–π—Ü–æ', price: 200, description: '–í–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç 40% –≥–æ–ª–æ–¥–∞', icon: 'Egg' },
    { id: 26, name: '–¢—É—à–∞ –∫—Ä—É–ø–Ω–æ–≥–æ –¥–∏–Ω–æ–∑–∞–≤—Ä–∞', price: 500, description: '–í–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç 100% –≥–æ–ª–æ–¥–∞', icon: 'Beef' },
  ];

  const pills = [
    { id: 31, name: '–õ–µ—á–µ–±–Ω–∞—è —Ç–∞–±–ª–µ—Ç–∫–∞', price: 300, description: '–í–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç 50% –∑–¥–æ—Ä–æ–≤—å—è', icon: 'Heart' },
    { id: 32, name: '–ê–Ω—Ç–∏–±–∏–æ—Ç–∏–∫', price: 450, description: '–õ–µ—á–∏—Ç –∏–Ω—Ñ–µ–∫—Ü–∏–∏ –∏ —è–¥—ã', icon: 'Pill' },
    { id: 33, name: '–°—Ç–∏–º—É–ª—è—Ç–æ—Ä', price: 250, description: '–£–≤–µ–ª–∏—á–∏–≤–∞–µ—Ç —Å–∫–æ—Ä–æ—Å—Ç—å –Ω–∞ 30 –º–∏–Ω—É—Ç', icon: 'Zap' },
    { id: 34, name: '–†–µ–≥–µ–Ω–µ—Ä–∞—Ü–∏—è', price: 600, description: '–ü–æ—Å—Ç–µ–ø–µ–Ω–Ω–æ –≤–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç –∑–¥–æ—Ä–æ–≤—å–µ', icon: 'HeartPulse' },
    { id: 35, name: '–ê–Ω—Ç–∏–¥–æ—Ç', price: 400, description: '–°–Ω–∏–º–∞–µ—Ç —ç—Ñ—Ñ–µ–∫—Ç—ã –æ—Ç—Ä–∞–≤–ª–µ–Ω–∏—è', icon: 'ShieldPlus' },
    { id: 36, name: '–í–∏—Ç–∞–º–∏–Ω—ã', price: 200, description: '–£–≤–µ–ª–∏—á–∏–≤–∞–µ—Ç –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–µ –∑–¥–æ—Ä–æ–≤—å–µ', icon: 'Sparkles' },
  ];

  const renderItems = (items: any[], showGrowthStage = false) => (
    <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 xl:grid-cols-4 gap-6">
      {items.map((item) => (
        <Card key={item.id} className="game-card hover:scale-105 transition-all duration-300">
          <CardHeader>
            <div className="flex justify-between items-start mb-2">
              <CardTitle className="text-lg font-bold">{item.name}</CardTitle>
              {item.icon && (
                <div className="w-10 h-10 rounded-full bg-primary/20 flex items-center justify-center">
                  <Icon name={item.icon} size={20} className="text-primary" />
                </div>
              )}
            </div>
            {showGrowthStage && item.growthStage && (
              <Badge className="w-fit bg-secondary/50">{item.growthStage}</Badge>
            )}
          </CardHeader>
          <CardContent>
            <p className="text-sm text-muted-foreground mb-4 min-h-[40px]">{item.description}</p>
            <div className="flex justify-between items-center">
              <div className="flex items-center space-x-2">
                <span className="text-2xl font-black text-accent">{item.price}</span>
                <span className="text-sm text-muted-foreground">PL</span>
              </div>
              <Button size="sm" className="game-button">
                <Icon name="ShoppingCart" size={16} className="mr-2" />
                –ö—É–ø–∏—Ç—å
              </Button>
            </div>
          </CardContent>
        </Card>
      ))}
    </div>
  );

  return (
    <div className="space-y-6">
      <div className="text-center space-y-2">
        <h2 className="text-5xl font-black glow-text">üõí –î–∏–Ω–æ–®–æ–ø</h2>
        <p className="text-xl text-muted-foreground">–ü–æ–∫—É–ø–∞–π—Ç–µ –¥–∏–Ω–æ–∑–∞–≤—Ä–æ–≤, —É—Å–∫–æ—Ä–µ–Ω–∏—è –∏ –ø—Ä–µ–¥–º–µ—Ç—ã</p>
        <div className="flex items-center justify-center space-x-4 text-sm">
          <div className="flex items-center space-x-2">
            <Icon name="Coins" size={18} className="text-accent" />
            <span className="text-muted-foreground">–ë–∞–ª–∞–Ω—Å:</span>
            <span className="font-bold text-accent">12,450 PL</span>
          </div>
        </div>
      </div>

      <Tabs value={activeCategory} onValueChange={setActiveCategory} className="w-full">
        <TabsList className="grid w-full grid-cols-4 mb-8">
          <TabsTrigger value="dinosaurs" className="text-base">
            <span className="mr-2">ü¶ñ</span>
            –î–∏–Ω–æ–∑–∞–≤—Ä—ã
          </TabsTrigger>
          <TabsTrigger value="boosts" className="text-base">
            <span className="mr-2">‚ö°</span>
            –£—Å–∫–æ—Ä–µ–Ω–∏—è
          </TabsTrigger>
          <TabsTrigger value="food" className="text-base">
            <span className="mr-2">üçñ</span>
            –ö–æ—Ä–º–∞
          </TabsTrigger>
          <TabsTrigger value="pills" className="text-base">
            <span className="mr-2">üíä</span>
            –¢–∞–±–ª–µ—Ç–∫–∏
          </TabsTrigger>
        </TabsList>

        <TabsContent value="dinosaurs" className="space-y-4">
          <div className="flex items-center justify-between">
            <h3 className="text-2xl font-bold">–î–∏–Ω–æ–∑–∞–≤—Ä—ã</h3>
            <Badge variant="outline" className="text-sm">
              {dinosaurs.length} –¥–æ—Å—Ç—É–ø–Ω–æ
            </Badge>
          </div>
          {renderItems(dinosaurs, true)}
        </TabsContent>

        <TabsContent value="boosts" className="space-y-4">
          <div className="flex items-center justify-between">
            <h3 className="text-2xl font-bold">–£—Å–∫–æ—Ä–µ–Ω–∏—è –∏ –±—É—Å—Ç—ã</h3>
            <Badge variant="outline" className="text-sm">
              {boosts.length} –¥–æ—Å—Ç—É–ø–Ω–æ
            </Badge>
          </div>
          {renderItems(boosts)}
        </TabsContent>

        <TabsContent value="food" className="space-y-4">
          <div className="flex items-center justify-between">
            <h3 className="text-2xl font-bold">–ö–æ—Ä–º–∞</h3>
            <Badge variant="outline" className="text-sm">
              {food.length} –¥–æ—Å—Ç—É–ø–Ω–æ
            </Badge>
          </div>
          {renderItems(food)}
        </TabsContent>

        <TabsContent value="pills" className="space-y-4">
          <div className="flex items-center justify-between">
            <h3 className="text-2xl font-bold">–¢–∞–±–ª–µ—Ç–∫–∏ –∏ –ø—Ä–µ–ø–∞—Ä–∞—Ç—ã</h3>
            <Badge variant="outline" className="text-sm">
              {pills.length} –¥–æ—Å—Ç—É–ø–Ω–æ
            </Badge>
          </div>
          {renderItems(pills)}
        </TabsContent>
      </Tabs>
    </div>
  );
}